# The bookshelf frontend replication controller ensures that at least 3
# instances of the bookshelf app are running on the cluster.
# For more info about Pods see:
#   https://cloud.google.com/container-engine/docs/pods/
# For more info about Deployments:
#   https://kubernetes.io/docs/user-guide/deployments/

# [START kubernetes_deployment]
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hanashi
  labels:
    app: hanashi
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: hanashi
    spec:
      containers:
      - name: hanashi-app
        # Replace  with your project ID or use `make template`
        image: gcr.io/hanashi-207514/hanashi
        # This setting makes nodes pull the docker image every time before
        # starting the pod. This is useful when debugging, but should be turned
        # off in production.
        imagePullPolicy: Always
        envFrom:
          - secretRef:
              name: django-env
        # env:
        #     - name: DATABASE_USER
        #       valueFrom:
        #         secretKeyRef:
        #           name: django-env
        #           key: DATABASE_USER
        #     - name: DATABASE_PASSWORD
        #       valueFrom:
        #         secretKeyRef:
        #           name: django-env
        #           key: DATABASE_PASSWORD
        #     - name: DATABASE_HOST
        #       valueFrom:
        #         secretKeyRef:
        #           name: django-env
        #           key: DATABASE_HOST
        #     - name: REDIS_PASSWORD
        #       valueFrom:
        #         secretKeyRef:
        #           name: django-env
        #           key: REDIS_PASSWORD
        #     - name: REDIS_HOST
        #       valueFrom:
        #         secretKeyRef:
        #           name: django-env
        #           key: REDIS_HOST
        ports:
        - containerPort: 80

      # # [START proxy_container]
      # - image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
      #   name: cloudsql-proxy
      #   command: ["/cloud_sql_proxy", "--dir=/cloudsql",
      #             "-instances=hanashi-207514:us-central1:django-db=tcp:5432",
      #             "-credential_file=/secrets/cloudsql/credentials.json"]
      #   volumeMounts:
      #     - name: cloudsql-oauth-credentials
      #       mountPath: /secrets/cloudsql
      #       readOnly: true
      #     - name: ssl-certs
      #       mountPath: /etc/ssl/certs
      #     - name: cloudsql
      #       mountPath: /cloudsql
      # # [END proxy_container]
      # # [START volumes]
      # volumes:
      #   - name: cloudsql-oauth-credentials
      #     secret:
      #       secretName: cloudsql-oauth-credentials
      #   - name: ssl-certs
      #     hostPath:
      #       path: /etc/ssl/certs
      #   - name: cloudsql
      #     emptyDir:
      # # [END volumes]
# [END kubernetes_deployment]

---

# [START service]
# The hanashi service provides a load-balancing proxy over the hanashi app
# pods. By specifying the type as a 'LoadBalancer', Container Engine will
# create an external HTTP load balancer.
# For more information about Services see:
#   https://cloud.google.com/container-engine/docs/services/
# For more information about external HTTP load balancing see:
#   https://cloud.google.com/container-engine/docs/load-balancer
apiVersion: v1
kind: Service
metadata:
  name: hanashi
  labels:
    app: hanashi
spec:
  type: LoadBalancer
  ports:
  # XXX: weired issue where websocket over 80 will get parsed into HTTP request?
  - port: 81
    targetPort: 80
  selector:
    app: hanashi
  externalTrafficPolicy: Cluster
# [END service]
